// метод итерации по объектам

/*
for (var key in obj) {
  console.log(key[obj]);
}
*/

// .push():lendth - добавляет елемент в конец массива, возвращает длинну массива

// .pop():element - вырезает элемент с конца массива, и возвращает этот же элемент

// .unshift():lendth - добавляет елемент в начало массива (сдвигает всех дальше), возвращает длинну массива

// .shift():element - вырезает элемент с начала массива (сдвигает всех вперед), и возвращает этот же элемент

// slice.(arg1, arg2):newArr - копирует часть массива или весь массив, если без аргументов, возвращает копию.
// arg1 - с какого элемента включительно
// arg2 - по какой объект НЕ включительно

// Замыкание

/*
function showBigger(n) {
  return function frozzen(m) {
    return n < m;
  }
}
*/

/////////////////////////////////////////////////////////

// проход по массиву с конца на i++

/*
for (var i = 0; i < arr.length; i++) {
  arr[(arr.length - 1) - i];
}
*/

// выводим четные И не ноль

/*
if (arr[i] % 2 === 0 && arr[i] !== 0) {};
*/

// не выводим отрицательные

/*
if (arr[i] < 0) {};
*/

// matrix

/*
function randNum(min, max) {
  return Math.floor(min + Math.random() * ((max + 1) - min));
}

var arrSize = 10
var martix = [];

for (var i = 0; i < arrSize; i++) {
  martix[i] = [];
  for (var j = 0; j < arrSize; j++) {
    martix[i][j] = randNum(0, 100);
  } 
}
console.table(martix);
*/

/////////////////////////////////////////////////////////



























